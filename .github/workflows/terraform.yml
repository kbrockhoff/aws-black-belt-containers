name: 'Terraform Deployment'

on:
  push:
    branches:
    - main
#    - '*/**'
#  pull_request:
#    branches: [ main ]

permissions:
  contents: read


jobs:
  terraform:
    name:   ${{matrix.runner}} - ${{ matrix.environment }}
    runs-on: [ '${{ matrix.runner }}']
    strategy:
      max-parallel: 1
      matrix:
        include:
          - environment: dev
            runner: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ./cluster-infra

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::838520979566:role/dl-aws-k8strng-sbox-kbgithub
        aws-region: us-west-2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.2.3
        terraform_wrapper: false

    - name: Terraform Init
      run: terraform init -backend-config=envs/${{ matrix.environment }}/backend.tfvars -upgrade=true

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Plan
      run: terraform plan -input=false -var-file=envs/${{ matrix.environment }}/terraform.tfvars

      # On push to "main", build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
#    - name: Terraform Apply
#      if: github.ref == 'refs/heads/"main"'
#      run: terraform apply -auto-approve -input=false -var-file=envs/${{ matrix.environment }}/terraform.tfvars
